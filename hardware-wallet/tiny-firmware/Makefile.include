TOP_DIR       := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
TOOLCHAIN_DIR ?= $(TOP_DIR)vendor/libopencm3

ifeq ($(EMULATOR),1)

PYTHON ?= python

CC       ?= gcc
LD       := $(CC)
OBJCOPY  := objcopy
OBJDUMP  := objdump
AR       := ar
AS       := as

OPTFLAGS ?= -O3
DBGFLAGS ?= -g3 -ggdb3
CPUFLAGS ?=
FPUFLAGS ?=

else
PREFIX   ?= arm-none-eabi-
CC       := $(PREFIX)gcc
LD       := $(PREFIX)gcc
OBJCOPY  := $(PREFIX)objcopy
OBJDUMP  := $(PREFIX)objdump
AR       := $(PREFIX)ar
AS       := $(PREFIX)as
OPENOCD  := openocd -f interface/stlink-v2.cfg -c "transport select hla_swd" -f target/stm32f2x.cfg

OPTFLAGS ?= -O3
DBGFLAGS ?= -g -DNDEBUG
CPUFLAGS ?= -mcpu=cortex-m3 -mthumb
FPUFLAGS ?= -msoft-float

LDFLAGS  += --static \
            -Wl,--start-group \
            -lc \
            -lgcc \
            -lnosys \
            -Wl,--end-group \
            -L$(TOOLCHAIN_DIR)/lib \
            -T$(LDSCRIPT) \
            -nostartfiles \
            -Wl,--gc-sections

endif

CFLAGS   += $(OPTFLAGS) \
            $(DBGFLAGS) \
            -std=gnu99 \
            -W \
            -Wall \
            -Wextra \
            -Wimplicit-function-declaration \
            -Wredundant-decls \
            -Wstrict-prototypes \
            -Wundef \
            -Wshadow \
            -Wpointer-arith \
            -Wformat \
            -Wreturn-type \
            -Wsign-compare \
            -Wmultichar \
            -Wformat-nonliteral \
            -Winit-self \
            -Wuninitialized \
            -Wformat-security \
            -Werror \
            -fno-common \
            -fno-exceptions \
            -fvisibility=internal \
            -ffunction-sections \
            -fdata-sections \
            -fstack-protector-all \
            $(CPUFLAGS) \
            $(FPUFLAGS) \
            -DSTM32F2 \
            -DCONFIDENTIAL='__attribute__((section("confidential")))' \
            -DRAND_PLATFORM_INDEPENDENT=1 \
            -I$(TOOLCHAIN_DIR)/include \
            -I$(TOP_DIR) \
            -I$(TOP_DIR)gen \
            -I$(TOP_DIR)vendor/skycoin-crypto \
            -I$(TOP_DIR)vendor/skycoin-crypto/tools \
            -I$(TOP_DIR)vendor/skycoin-crypto/trezor-tools \
            -I$(TOP_DIR)vendor/skycoin-crypto/trezor-tools/aes

LDFLAGS  += -L$(TOP_DIR) \
            $(DBGFLAGS) \
            $(CPUFLAGS) \
            $(FPUFLAGS)

CFLAGS += -DFASTFLASH=0

ifeq ($(REVERSE_SCREEN),1)
CFLAGS   += -DREVERSE_SCREEN=1
else
CFLAGS   += -DREVERSE_SCREEN=0
endif

ifeq ($(REVERSE_BUTTONS),1)
CFLAGS   += -DREVERSE_BUTTONS=1
else
CFLAGS   += -DREVERSE_BUTTONS=0
endif

ifeq ($(EMULATOR),1)
CFLAGS   += -DEMULATOR=1
else
CFLAGS   += -DEMULATOR=0
endif

CFLAGS += -DMEMORY_PROTECT=0
CFLAGS += -DDEBUG_RNG=0

$(NAME).bin: $(NAME).elf
	$(OBJCOPY) -Obinary $(NAME).elf $(NAME).bin

$(NAME).elf: $(OBJS) $(LDSCRIPT) $(LIBDEPS)
	$(LD) -o $(NAME).elf $(OBJS) $(LDLIBS) $(LDFLAGS)

%.o: %.c Makefile
	$(CC) $(CFLAGS) -MMD -MP -o $@ -c $<

%.small.o: %.c Makefile
	$(CC) $(CFLAGS) -MMD -MP -o $@ -c $<

%.d: %.c Makefile
	@$(CC) $(CFLAGS) -MM -MP -MG -o $@ $<

%.small.d: %.c Makefile
	@$(CC) $(CFLAGS) -MM -MP -MG -o $@ $<

%.o: %.s Makefile
	$(AS) $(CPUFLAGS) -o $@ $<

clean::
	rm -f $(OBJS)
	rm -f *.a
	rm -f *.bin
	rm -f *.d
	rm -f *.elf
	rm -f *.hex
	rm -f *.list
	rm -f *.log
	rm -f *.srec
